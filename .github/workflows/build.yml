name: Build and Deploy Workflow
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build with Maven
        run: mvn clean install

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: target-files
          path: target

  docker-image:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      container_status: ${{ steps.check_status.outputs.status }}  # Setting job output
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: target-files
          path: target

      - name: Build Docker Image
        run: docker build -t my-java-app .

      - name: Run Docker Container
        run: docker run -d -p 8080:8080 --name my-running-app my-java-app

      - name: Check if the Container is Running
        id: check_status
        run: |
          if docker ps | grep my-running-app; then
            echo "status=running" >> "$GITHUB_ENV"
          else
            echo "status=failed" >> "$GITHUB_ENV"
          fi

  verify-container:
    needs: docker-image  # Runs after docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Verify Job Output
        run: echo "The container status is ${{ needs.docker-job.outputs.container_status }}"
