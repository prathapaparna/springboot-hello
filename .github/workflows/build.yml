name: Build and Deploy Workflow
on: push

jobs:
  maven-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build with Maven
        run: mvn clean install

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: target-files
          path: target

  docker-job:
    needs: maven-job
    runs-on: ubuntu-latest
    outputs:
      container_status: ${{ steps.check_status.outputs.status }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: target-files
          path: target

      - name: Cache Docker Build Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            docker-${{ runner.os }}-

      - name: Build Docker Image
        run: |
          docker build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            -t my-java-app .

      - name: Run Docker Container
        run: docker run -d -p 8080:8080 --name my-running-app my-java-app

      - name: Check if the Container is Running
        id: check_status
        run: |
          if docker ps | grep my-running-app; then
            echo "status=running" >> "$GITHUB_OUTPUT"
          else
            echo "status=failed" >> "$GITHUB_OUTPUT"
          fi

  verify-container:
    needs: docker-job
    runs-on: ubuntu-latest
    steps:
      - name: Verify Job Output
        run: echo "The container status is ${{ needs.docker-job.outputs.container_status }}"
